# .github/workflows/manual.yml

name: Test Inventory on Python 2.7
on: [workflow_dispatch]
jobs:
  build-collection:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Prerequisite install
        run: |
          sudo apt remove ansible
          sudo pip install 'ansible-core<2.12'
          
      - name: Build collection
        run: |
          cd $GITHUB_WORKSPACE
          ansible-galaxy collection build
      
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(grep version galaxy.yml | gawk -F\" '{print $2}')
      
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.0
        with:
          # Artifact name
          name: "morpheus-core-${{ steps.get_version.outputs.VERSION }}.tar.gz" # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: /home/runner/work/ansible-collection-morpheus-core/ansible-collection-morpheus-core/*.tar.gz
          # The desired behavior if no files are found using the provided path.
      #Available Options:
        #warn: Output a warning but do not fail the action
        #error: Fail the action with an error message
        #ignore: Do not output any warnings or errors, the action does not fail

          if-no-files-found: error
          # Duration after which artifact will expire in days. 0 means using default retention.
      #Minimum 1 day. Maximum 90 days unless changed from the repository settings page.

          retention-days: 1
  test-collection:
    runs-on: ubuntu-latest
    needs: build-collection
    strategy:
      matrix:
        # python-version: ['2.x', '3.6', '3.7', '3.8', '3.9']
        # ansible-version: ['ansible<2.10', 'ansible<2.11', 'ansible<6']
        python-version: ['3.8']
        ansible-version: ['ansible-core<2.12']
    steps:
      - uses: actions/checkout@v2

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(grep version galaxy.yml | gawk -F\" '{print $2}')
      
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Retrieve Artifact
        uses: actions/download-artifact@v2
        with:
          name: morpheus-core-${{ steps.get_version.outputs.VERSION }}.tar.gz
          path: .
      - name: Install ansible
        run: |
          pip install '${{ matrix.ansible-version }}'
          ansible-galaxy collection install /home/runner/work/ansible-collection-morpheus-core/ansible-collection-morpheus-core/morpheus-core-${{ steps.get_version.outputs.VERSION }}.tar.gz
